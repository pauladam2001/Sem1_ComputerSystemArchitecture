     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  extern function
     7                                  ; declare external functions needed by our program
     8                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     9                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    10                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    11                                  import printf msvcrt.dll
    12                                  
    13                                  ; A string of quadwords is defined in the data segment. The degree of an element is defined as being the number of "111" distinct sequences from its binary representation (ex.: 111111b has the degree 2). It is requi
    14                                  ; Example: If the given string is sir dq 1110111b, 100000000h, 0ABCD0002E7FCh, 5
    15                                  ;          The resulted string is rez dd 1110111b, 0002E7FCh
    16                                  ;          On the screen will be printed 1110111 101110011111111100
    17                                  
    18                                  ; our data is declared here (the variables needed by our program)
    19                                  segment data use32 class=data
    20 00000000 770000000000000000-         sir dq 1110111b, 100000000h, 0ABCD0002E7FCh, 5
    20 00000009 00000001000000FCE7-
    20 00000012 0200CDAB0000050000-
    20 0000001B 0000000000         
    21                                      len equ ($ - sir)/8
    22 00000020 00000000<rept>              rez times len dd 0
    23 00000030 257300                      format db "%s", 0
    24                                      
    25                                  
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29 00000000 6A04                            push dword len
    30 00000002 68[20000000]                    push dword rez
    31 00000007 68[00000000]                    push dword sir
    32 0000000C E8(00000000)                    call function
    33 00000011 83C40C                          add ESP, 4*3
    34                                      
    35                                          ; exit(0)
    36 00000014 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000016 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
