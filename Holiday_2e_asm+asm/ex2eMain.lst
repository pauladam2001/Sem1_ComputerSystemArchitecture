     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fread, scanf, printf              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                                            
    11                                  extern function
    12                                                            
    13                                  import fopen msvcrt.dll
    14                                  import fclose msvcrt.dll
    15                                  import scanf msvcrt.dll
    16                                  import fread msvcrt.dll
    17                                  import printf msvcrt.dll
    18                                  
    19                                  ;Se citeste un text din fisier. Calculati numarul de cuvinte din fisier.
    20                                  
    21                                  ; our data is declared here (the variables needed by our program)
    22                                  segment data use32 class=data
    23 00000000 46696C65312E747874-         file_name1 db "File1.txt", 0
    23 00000009 00                 
    24 0000000A 7200                        acces_mode1 db "r", 0
    25 0000000C FFFFFFFF                    file_descriptor1 dd -1
    26                                      len equ 100
    27 00000010 00<rept>                    text times len db 0
    28 00000074 00                          char db 0
    29 00000075 00                          nrOfWords db 0
    30 00000076 257500                      format db "%u", 0
    31                                      
    32                                  
    33                                  ; our code starts here
    34                                  segment code use32 class=code
    35                                      start:
    36 00000000 68[0A000000]                    push dword acces_mode1
    37 00000005 68[00000000]                    push dword file_name1
    38 0000000A FF15[00000000]                  call [fopen]                    ;open the file from where we read the text
    39 00000010 83C408                          add ESP, 4*2
    40 00000013 A3[0C000000]                    mov [file_descriptor1], EAX
    41                                          
    42 00000018 83F800                          cmp EAX, 0              ;check if the file was open correctly
    43 0000001B 7452                            je Final
    44                                          
    45 0000001D FF35[0C000000]                  push dword [file_descriptor1]
    46 00000023 6A64                            push dword len
    47 00000025 6A01                            push dword 1                ;read the text from the file
    48 00000027 68[10000000]                    push dword text
    49 0000002C FF15[00000000]                  call [fread]
    50 00000032 83C410                          add ESP, 4*4
    51                                          
    52 00000035 68[10000000]                    push dword text
    53 0000003A 68[75000000]                    push dword nrOfWords
    54 0000003F E8(00000000)                    call function
    55 00000044 83C408                          add ESP, 4*2
    56                                          
    57                                          
    58 00000047 B800000000                      mov EAX, 0
    59 0000004C A0[75000000]                    mov AL, [nrOfWords]
    60                                          
    61 00000051 50                              push EAX ;nrOfWords
    62 00000052 68[76000000]                    push dword format       ;print the number of words in the file
    63 00000057 FF15[00000000]                  call [printf]
    64 0000005D 83C408                          add ESP, 4*2
    65                                          
    66 00000060 FF35[0C000000]                  push dword [file_descriptor1]
    67 00000066 FF15[00000000]                  call [fclose]                   ;close the file
    68 0000006C 83C404                          add ESP, 4  
    69                                          
    70                                          Final:
    71                                          ; exit(0)
    72 0000006F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    73 00000071 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
