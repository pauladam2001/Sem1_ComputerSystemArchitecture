     1                                  bits  32
     2                                  global  start
     3                                  
     4                                  extern exit, fopen, fclose, fscanf, printf
     5                                  
     6                                  import  exit msvcrt.dll
     7                                  import fopen msvcrt.dll
     8                                  import fclose msvcrt.dll
     9                                  import fscanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  extern B
    13                                  
    14                                  
    15                                  segment  data use32 public data
    16                                  
    17 00000000 696E7075742E747874-         file_name db "input.txt", 0
    17 00000009 00                 
    18 0000000A 7200                        access_mode db "r", 0
    19 0000000C FFFFFFFF                    file_descriptor dd -1
    20 00000010 00000000                    numberToRead dd 0
    21 00000014 2564                        number_type db "%d"
    22 00000016 00000000                    counter dd 0
    23 0000001A 2564202000                  format_print db "%d  ", 0
    24 0000001F 00000000<rept>              numbers times 100 dd 0
    25 000001AF 00000000                    sorted_number dd 0
    26                                      
    27                                  segment  code use32 public code
    28                                      start:
    29                                          ; call fopen() to create the file
    30                                          ; fopen() will return a file descriptor in the EAX or 0 in case of error
    31                                          ; eax = fopen(file_name, access_mode)
    32                                          
    33 00000000 68[0A000000]                    push dword access_mode
    34 00000005 68[00000000]                    push dword file_name
    35 0000000A FF15[00000000]                  call [fopen]
    36 00000010 83C408                          add ESP, 4*2
    37                                          
    38 00000013 A3[0C000000]                    mov dword[file_descriptor], EAX
    39                                          
    40 00000018 83F800                          cmp EAX, 0
    41 0000001B 0F8484000000                    je final
    42                                          
    43 00000021 FC                              cld
    44 00000022 BF[1F000000]                    mov EDI, numbers
    45                                          readNumbers:
    46                                              ;EAX = fscanf(file_descriptor, number_type, numberToRead)
    47 00000027 68[10000000]                        push dword numberToRead ; read the text from file usinf fscanf()
    48 0000002C 68[14000000]                        push dword number_type
    49 00000031 FF35[0C000000]                      push dword [file_descriptor]
    50 00000037 FF15[00000000]                      call [fscanf]
    51 0000003D 83C410                              add ESP, 4*4 ; clean-up the stack
    52                                              
    53 00000040 8305[16000000]01                    add dword[counter], 1
    54 00000047 BE[10000000]                        mov ESI, numberToRead
    55 0000004C A5                                  movsd
    56                                              
    57 0000004D 83F8FF                              cmp EAX, -1
    58 00000050 75D5                                jne readNumbers
    59                                             
    60                                              
    61 00000052 832D[16000000]01                sub dword[counter], 1
    62                                          
    63 00000059 68[1F000000]                    push dword numbers
    64 0000005E FF35[16000000]                  push dword[counter]
    65 00000064 E8(00000000)                    call B
    66 00000069 83C408                          add ESP, 4*2
    67                                          
    68 0000006C 8B0D[16000000]                  mov ECX, dword[counter]
    69 00000072 BE[1F000000]                    mov ESI, numbers
    70 00000077 FC                              cld
    71                                          for_every_number:
    72                                          ;printf(format_print, numbers)
    73 00000078 AD                                  lodsd
    74 00000079 A3[AF010000]                        mov [sorted_number], EAX
    75 0000007E 60                                  pushad
    76 0000007F FF35[AF010000]                      push dword [sorted_number]
    77 00000085 68[1A000000]                        push dword format_print
    78 0000008A FF15[00000000]                      call [printf]
    79 00000090 83C408                              add ESP, 4*2
    80 00000093 61                                  popad
    81 00000094 E2E2                                loop for_every_number
    82                                          
    83                                          ;fclose(file_descriptor)
    84 00000096 FF35[0C000000]                  push dword[file_descriptor]
    85 0000009C FF15[00000000]                  call [fclose]
    86 000000A2 83C404                          add ESP, 4*1
    87                                          
    88                                          final:
    89                                          
    90 000000A5 6A00                            push    dword 0
    91 000000A7 FF15[00000000]                  call    [exit]
    92                                              
