     1                                  bits 32
     2                                  
     3                                  global B
     4                                  
     5                                  segment data use32 class=data
     6                                  
     7 00000000 00000000                    sum_of_bits2 dd 0
     8 00000004 00<rept>                    destination times 4 db 0
     9 00000008 00000000                    max_number dd 0 
    10 0000000C 00000000                    max_position dd 0
    11                                      
    12                                  segment code use32 class=code
    13                                  
    14                                  B:
    15                                  ; ESP - return address
    16                                  ; ESP + 4 - given_string
    17                                  ; ESP + 8 - destination_string
    18                                  ; ESP + 12 - length
    19                                      
    20 00000000 8B742404                    mov ESI, [ESP + 4]
    21 00000004 8B7C2408                    mov EDI, [ESP + 8]
    22 00000008 8B4C240C                    mov ECX, [ESP + 12]
    23 0000000C FC                          cld
    24                                      for_every_doubleword:
    25 0000000D 51                              push ECX
    26 0000000E B904000000                      mov ECX, 4
    27 00000013 FC                              cld
    28                                          find_maximum_byte:
    29 00000014 AC                                  lodsb
    30 00000015 3A05[08000000]                      cmp AL, [max_number]
    31 0000001B 720B                                jb not_found_larger
    32 0000001D A2[08000000]                            mov [max_number], AL
    33 00000022 890D[0C000000]                          mov [max_position], ECX
    34                                                  
    35                                              not_found_larger:
    36 00000028 E2EA                                loop find_maximum_byte
    37                                           
    38 0000002A 59                              pop ECX
    39                                          
    40 0000002B A0[0C000000]                    mov AL, [max_position]
    41 00000030 AA                              stosb
    42 00000031 BB00000000                      mov EBX, 0
    43 00000036 8B1D[08000000]                  mov EBX, [max_number]
    44                                          
    45 0000003C 011D[00000000]                  add [sum_of_bits2], EBX
    46                                          
    47 00000042 C705[0C000000]0000-             mov dword[max_position], 0
    47 0000004A 0000               
    48 0000004C C605[08000000]00                mov byte[max_number], 0
    49                                          
    50 00000053 E2B8                        loop for_every_doubleword
    51                                      
    52 00000055 A1[00000000]                mov EAX, [sum_of_bits2]
    53 0000005A C3                          ret
