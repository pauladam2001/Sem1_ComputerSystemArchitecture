     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fread, scanf, fprintf , printf              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                                            
    11                                  extern function
    12                                                            
    13                                  import fopen msvcrt.dll
    14                                  import fclose msvcrt.dll
    15                                  import scanf msvcrt.dll
    16                                  import fprintf msvcrt.dll
    17                                  import fread msvcrt.dll
    18                                  import printf msvcrt.dll
    19                                  
    20                                  ;Se citeste un text din fisier si un character de la tastatura. Calculati numarul de aparitii al caracterului citit in textul dat si inlocuiti-l cu X, scriind rezultatul in alt fisier output.txt
    21                                  
    22                                  ; our data is declared here (the variables needed by our program)
    23                                  segment data use32 class=data
    24 00000000 46696C65312E747874-         file_name1 db "File1.txt", 0
    24 00000009 00                 
    25 0000000A 6F75747075742E7478-         file_name2 db "output.txt", 0
    25 00000013 7400               
    26 00000015 7200                        acces_mode1 db "r", 0
    27 00000017 7700                        acces_mode2 db "w", 0
    28 00000019 FFFFFFFF                    file_descriptor1 dd -1
    29 0000001D FFFFFFFF                    file_descriptor2 dd -1
    30                                      len equ 100
    31 00000021 00<rept>                    text times len db 0
    32 00000085 496E74726F64756365-         format_char db "Introduce the character: ", 0
    32 0000008E 207468652063686172-
    32 00000097 61637465723A2000   
    33 0000009F 256300                      format_char_2 db "%c", 0
    34 000000A2 54686520676976656E-         format_output db "The given character appears %u times. The new text is: %s", 0
    34 000000AB 206368617261637465-
    34 000000B4 722061707065617273-
    34 000000BD 2025752074696D6573-
    34 000000C6 2E20546865206E6577-
    34 000000CF 20746578742069733A-
    34 000000D8 20257300           
    35 000000DC 00                          char db 0
    36 000000DD 00                          nrOfChar db 0
    37                                      
    38                                  
    39                                  ; our code starts here
    40                                  segment code use32 class=code
    41                                      start:
    42 00000000 68[15000000]                    push dword acces_mode1
    43 00000005 68[00000000]                    push dword file_name1
    44 0000000A FF15[00000000]                  call [fopen]                ;open the file from where we read the text
    45 00000010 83C408                          add ESP, 4*2
    46 00000013 A3[19000000]                    mov [file_descriptor1], EAX
    47                                          
    48 00000018 83F800                          cmp EAX, 0              ;check if the files were open correctly
    49 0000001B 0F84B3000000                    je Final
    50                                          
    51 00000021 68[17000000]                    push dword acces_mode2
    52 00000026 68[0A000000]                    push dword file_name2
    53 0000002B FF15[00000000]                  call [fopen]                ;open the file where we will write the number of appearences and the new text
    54 00000031 83C408                          add ESP, 4*2
    55 00000034 A3[1D000000]                    mov [file_descriptor2], EAX
    56                                              
    57 00000039 83F800                          cmp EAX, 0              ;check if the files were open correctly
    58 0000003C 0F8492000000                    je Final
    59                                          
    60 00000042 FF35[19000000]                  push dword [file_descriptor1]
    61 00000048 6A64                            push dword len
    62 0000004A 6A01                            push dword 1                    ;read the text from the file
    63 0000004C 68[21000000]                    push dword text
    64 00000051 FF15[00000000]                  call [fread]
    65 00000057 83C410                          add ESP, 4*4
    66                                          
    67 0000005A 68[85000000]                    push dword format_char
    68 0000005F FF15[00000000]                  call [printf]               
    69 00000065 83C404                          add ESP, 4                  
    70                                          
    71 00000068 68[DC000000]                    push dword char
    72 0000006D 68[9F000000]                    push dword format_char_2        ;read the character
    73 00000072 FF15[00000000]                  call [scanf]                    
    74 00000078 83C408                          add ESP, 4*2                   
    75                                          
    76 0000007B 68[DC000000]                    push dword char
    77 00000080 68[21000000]                    push dword text
    78 00000085 68[DD000000]                    push dword nrOfChar
    79 0000008A E8(00000000)                    call function
    80 0000008F 83C408                          add ESP, 4*2
    81                                          
    82                                          
    83 00000092 B800000000                      mov EAX, 0
    84 00000097 A0[DD000000]                    mov AL, [nrOfChar]
    85                                          
    86 0000009C 68[21000000]                    push dword text
    87 000000A1 50                              push EAX    ;nrOfChar
    88 000000A2 68[A2000000]                    push dword format_output            ;print in the file the number of appearences and the new text
    89 000000A7 FF35[1D000000]                  push dword [file_descriptor2]
    90 000000AD FF15[00000000]                  call [fprintf]
    91 000000B3 83C410                          add ESP, 4*4
    92                                          
    93 000000B6 FF35[19000000]                  push dword [file_descriptor1]
    94 000000BC FF15[00000000]                  call [fclose]                       ;close the files
    95 000000C2 83C404                          add ESP, 4
    96                                          
    97 000000C5 FF35[1D000000]                  push dword [file_descriptor2]
    98 000000CB FF15[00000000]                  call [fclose]                       ;close the files
    99 000000D1 83C404                          add ESP, 4
   100                                          
   101                                          Final:
   102                                          ; exit(0)
   103 000000D4 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   104 000000D6 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
